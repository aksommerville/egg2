/* Globals.
 ******************************************************************************************/

html {
  background-color: #444;
  color: #fff;
  font-family: sans-serif;
  font-size: 10pt;
}

body {
  margin: 0;
  width: 100vw;
  height: 100vh;
}

.row {
  display: flex;
  flex-direction: row;
}
.col {
  display: flex;
  flex-direction: column;
}

dialog {
  border-radius: 5px;
  box-shadow: #000 0 0 10px;
}

::backdrop {
  background-color: #000;
  opacity: 0.500;
}

/* General usage tips.
 */
.advice {
  font-style: italic;
}

/* Checkboxes or radio buttons where the whole label is the button.
 * Prefer for inline toggles, where it's not obvious which label the button would attach to.
 * INPUT first, then LABEL, both with class "toggle".
 */
input.toggle {
  display: none;
}
label.toggle {
  border: 1px solid #000;
  padding: 3px 8px;
  margin: 2px;
  background-color: #555;
  cursor: pointer;
  user-select: none;
}
input.toggle:checked + label.toggle {
  background-color: #123;
  color: #ff0;
}
label.toggle.light {
  color: #555;
  background-color: #eee;
}
input.toggle:checked + label.toggle.light {
  background-color: #ff0;
  color: #000;
}

.ModalPickOne {
  display: flex;
  flex-direction: column;
}

.ModalText input.response {
  min-width: 50vw;
}

.ModalError {
  background-color: #400;
  color: #fff;
  white-space: pre;
  min-width: 50vw;
  min-height: 50vh;
}

.Toast {
  position: fixed;
  bottom: 20px;
  left: 50vw;
  transform: translate(-50%, 0);
  max-width: 50vw;
}
.Toast > .message {
  padding: 10px;
  border: 1px solid #000;
  border-radius: 10px;
  background-color: #fff;
  color: #000;
  animation: 4s fade-out;
}
@keyframes fade-out {
  0% { opacity: 1 }
  50% { opacity: 1 }
  100% { opacity: 0 }
}

/* Root, sidebar, and associated bits.
 *************************************************************************************************/

.RootUi {
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: 250px calc(100vw - 250px);
  overflow:hidden;
}
.RootUi > .workbench {
  flex: 1;
}
.RootUi > .workbench > * {
  width: 100%;
  height: 100%;
}

.SidebarUi {
  min-width: 200px;
  border-right: 1px solid #000;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.SidebarUi .topRow {
  display: flex;
  flex-direction: row;
  padding: 4px;
  gap: 4px;
}
.SidebarUi .backendIndicator {
  width: 20px;
  height: 20px;
  border-radius: 12px;
  border: 2px solid #000;
  background-color: #888;
}
.SidebarUi .backendIndicator.clean {
  background-color: #080;
}
.SidebarUi .backendIndicator.dirty {
  background-color: #ff0;
}
.SidebarUi .backendIndicator.pending {
  background-color: #f80;
}
.SidebarUi .backendIndicator.error {
  background-color: #f00;
}
.SidebarUi .toc {
  overflow-y: scroll;
  flex: 1;
}
.SidebarUi details.type {
  margin-top: 5px;
}
.SidebarUi summary.type {
  background-color: #103;
  cursor: pointer;
  user-select: none;
}
.SidebarUi .res {
  cursor: pointer;
  user-select: none;
}
.SidebarUi .res:hover {
  background-color: #333;
}
.SidebarUi .res.highlight {
  background-color: #00f;
}

.NewResourceModal {
  min-width: 400px;
}
.NewResourceModal h2 {
  margin: 0;
}
.NewResourceModal table {
  width: 100%;
}
.NewResourceModal td.value > input {
  width: 100%;
}
.NewResourceModal .bottomRow {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}

.ResourceDetailsModal .path {
  font-size: 14pt;
  font-weight: bold;
}
.ResourceDetailsModal input[name='npath'] {
  min-width: 300px;
}
.ResourceDetailsModal .editors {
  display: flex;
  flex-direction: column;
}
.ResourceDetailsModal .editor.great {
  background-color: #0c0;
}
.ResourceDetailsModal .editor.good {
  background-color: #898;
}
.ResourceDetailsModal .editor.bad {
  background-color: #f66;
}

/* Minor standard editors.
 ****************************************************************************************/

.TextEditor textarea {
  box-sizing: border-box;
  width: 100%;
  height: 99%;
  background-color: #012;
  color: #fff;
  font-family: monospace;
}

.HexEditor {
  display: flex;
  flex-direction: column;
}
.HexEditor .nav {
  display: flex;
  flex-direction: row;
  border-bottom: 1px solid #000;
  padding: 5px;
  align-items: baseline;
}
.HexEditor .nav .pageStart {
  margin-right: 5px;
}
.HexEditor .nav input[name="page"] {
  width: 4rem;
  text-align: right;
}
.HexEditor .nav .pageSep {
  margin: 0 5px;
}
.HexEditor .nav .pageCount {
  font-weight: bold;
}
.HexEditor .content {
  display: flex;
  flex-direction: row;
  justify-content: center;
  height: 270px;
}
.HexEditor .content > textarea[name="offset"] {
  width: 80px;
  text-align: center;
  resize: none;
  background-color: #222;
  color: #aaa;
}
.HexEditor .content > textarea[name="hex"] {
  text-align: left;
  resize: none;
  width: 410px;
  background-color: #000;
  color: #cfc;
}
.HexEditor .content > textarea[name="text"] {
  width: 160px;
  text-align: left;
  resize: none;
  background-color: #210;
  color: #ffc;
}
.HexEditor .content > textarea.invalid {
  background-color: #c00;
  color: #fff;
}
.HexEditor .digested {
  flex: 1;
  border-top: 1px solid #000;
}

.ImageEditor {
  display: flex;
  flex-direction: column;
}
.ImageEditor > .top {
  height: 520px; /* Let 256px images scale up 2x */
  display: flex;
  flex-direction: row;
  border-bottom: 1px solid #000;
}
.ImageEditor > .top > .full {
  flex: 1;
  min-width: 100px;
}
.ImageEditor > .top > .setup {
  width: 250px;
  border-left: 1px solid #000;
}
.ImageEditor .resName {
  min-height: 1lh;
}
.ImageEditor .resDimensions {
  min-height: 1lh;
}
.ImageEditor > .bottom {
  display: flex;
  flex-direction: row;
  height: calc(100vh - 520px); /* Need explicit height to prevent scrollable children from overflowing. */
}
.ImageEditor > .bottom > .preview {
  width: 300px;
}
.ImageEditor > .bottom > .animlist {
  border-left: 1px solid #000;
  overflow-y: scroll;
  overflow-x: hidden;
  width: 200px;
}
.ImageEditor > .bottom > .animedit {
  border-left: 1px solid #000;
  overflow-y: scroll;
  overflow-x: hidden;
  flex: 1;
}
.ImageEditor .face {
  cursor: pointer;
  user-select: none;
}
.ImageEditor .face.selected {
  background-color: #014;
}
.ImageEditor .frame {
  display: flex;
  flex-direction: column;
  margin: 5px 0;
}
.ImageEditor .frame > .tiles {
  position: relative;
  left: 10px;
}
.ImageEditor .tile > input[type="number"] {
  width: 60px;
}

.PickImageModal {
  display: flex;
  flex-direction: column;
}
.PickImageModal .topRow {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.PickImageModal button.image {
  height: 150px;
  width: 500px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}
.PickImageModal button.image.prior {
  background-color: #fec;
}
.PickImageModal canvas.thumbnail {
  width: 128px;
  height: 128px;
  margin-right: 10px;
}

.PickTileModal canvas {
  width: 768px;
  height: 768px;
}

/* Tilesheet
 *************************************************************************************/

.TilesheetEditor {
  background-color: #020;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.TilesheetEditor .toolbar {
  background-color: #666;
  border-bottom: 1px solid #000;
  padding: 4px;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 6px;
}
.TilesheetEditor .toolbar > .spacer {
  margin-left: 5px;
  border-left: 1px solid #000;
  margin-right: 5px;
  height: 15px;
}
.TilesheetEditor .toolbar > .tattle {
  background-color: #000;
  color: #0f0;
  padding: 3px 6px;
  font-family: monospace;
}
.TilesheetEditor .canvas {
  flex: 1;
}

.TileModal {
  display: flex;
  flex-direction: column;
}
.TileModal > .topRow {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}
.TileModal .tileid {
  font-weight: bold;
  font-size: 24pt;
  font-family: monospace;
  margin: 10px;
}
.TileModal table.neighbors tr {
  height: 20px;
}
.TileModal table.neighbors td[data-mask] {
  border: 1px solid #888;
  width: 20px;
  cursor: pointer;
}
.TileModal table.neighbors td.present {
  background-color: #080;
}
.TileModal .thumbnail {
  width: 64px;
  height: 64px;
  image-rendering: pixelated;
}
.TileModal td.key {
  text-align: right;
  width: 100px;
}
.TileModal td.desc {
  font-style: italic;
  width: 200px;
}
.TileModal .macros {
  display: grid;
  grid-template-columns: 50% 50%;
}
.TileModal .macros > button {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.TileModal .macroPreview {
  width: 64px;
  height: 64px;
  margin-right: 5px;
  object-fit: contain;
}

/* Decalsheet
 *********************************************************************************/
 
.DecalsheetEditor {
  display: flex;
  flex-direction: row;
  align-items: stretch;
}
.DecalsheetEditor .sidebar {
  min-width: 300px;
  border-right: 1px solid #000;
  overflow-y: scroll;
}
.DecalsheetEditor .panel {
  padding: 5px;
  border: 1px solid #000;
  background-color: #040;
}
.DecalsheetEditor .panel:nth-child(odd) {
  background-color: #020;
}
.DecalsheetEditor .spacer {
  flex: 1;
}
.DecalsheetEditor input[name='comment'] {
  box-sizing: border-box;
  width: 100%;
}
.DecalsheetEditor input.coords {
  flex: 1;
}
.DecalsheetEditor input.invalid {
  border: 1px solid #f00;
  background-color: #faa;
}
.DecalsheetEditor .panel:hover input {
  background-color: #def;
}
.DecalsheetEditor .panel input.autoSetting {
  background-color: #ff0;
}
.DecalsheetEditor .panel .advice {
  height: 1lh;
}
.DecalsheetEditor .previewWrapper {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}
.DecalsheetEditor .preview {
  /* width,height:100% and object-fit:contain work great for display purposes, but then it is impossible to project mouse coordinates into canvas space.
   * So instead, CSS will center the canvas in its wrapper, and JS will scale it up to the available space.
   */
  image-rendering: pixelated;
  position: absolute;
}

/* CommandList
 **************************************************************************************/

.CommandListEditor {
  overflow-y: scroll;
  height: 50vh;
}
.CommandListEditor input[name='command'] {
  flex: 1;
  min-width: 40vw;
}

.CommandListCommandModal {
  min-width: 75vw;
  display: flex;
  flex-direction: column;
}

.SpriteEditor .topRow {
  align-items: center;
}
.SpriteEditor .preview {
  width: 128px;
  height: 128px;
  image-rendering: pixelated;
}

/* Map
 *************************************************************************************/
 
.MapEditor {
  display: grid;
  grid-template-rows: 55px calc(100vh - 55px);
  grid-template-columns: 100%;
}

.MapToolbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  border-bottom: 1px solid #000;
  gap: 4px;
  padding: 0 4px;
}
.MapToolbar > .palette {
  width: 32px;
  height: 32px;
  padding: 2px;
  border: 1px solid #000;
  image-rendering: pixelated;
}
.MapToolbar > .toolbox {
  display: grid;
  grid-template-rows: 50% 50%;
  grid-auto-flow: column;
}
.MapToolbar > .toolbox .tool {
  width: 16px;
  height: 16px;
  padding: 1px;
  background-image: url('./icons.png');
  background-clip: content-box;
  cursor: pointer;
}
.MapToolbar > .toolbox .tool.selected {
  background-color: #ff0;
}
.MapToolbar > .toolbox .tool[data-name='pencil']   { background-position:    1px 1px; }
.MapToolbar > .toolbox .tool[data-name='rainbow']  { background-position:  -15px 1px; }
.MapToolbar > .toolbox .tool[data-name='monalisa'] { background-position:  -31px 1px; }
.MapToolbar > .toolbox .tool[data-name='heal']     { background-position:  -47px 1px; }
.MapToolbar > .toolbox .tool[data-name='pickup']   { background-position:  -63px 1px; }
.MapToolbar > .toolbox .tool[data-name='marquee']  { background-position:  -79px 1px; }
.MapToolbar > .toolbox .tool[data-name='lasso']    { background-position:  -95px 1px; }
.MapToolbar > .toolbox .tool[data-name='poiedit']  { background-position: -111px 1px; }
.MapToolbar > .toolbox .tool[data-name='poimove']  { background-position: -127px 1px; }
.MapToolbar > .toolbox .tool[data-name='door']     { background-position: -143px 1px; }
.MapToolbar > .vzone {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.MapToolbar .toggles {
  display: flex;
  flex-direction: row;
}
.MapToolbar .tattles {
  display: flex;
  flex-direction: row;
}
.MapToolbar .tattle {
  background-color: #000;
  font-family: monospace;
  margin: 2px;
  padding: 3px 5px;
  height: 1lh;
}
.MapToolbar .tattle.position {
  color: #0f0;
  width: 60px;
  white-space: pre;
}
.MapToolbar .tattle.detail {
  color: #ff0;
  flex: 1;
}

.MapCanvas {
  flex: 1;
  display: flex;
  align-items: stretch;
  justify-content: stretch;
  position: relative;
}
.MapCanvas .scroller {
  flex: 1;
  overflow: scroll;
}
.MapCanvas .sizer {
  background-color: #000;
}
.MapCanvas .main {
  position: absolute;
  left: 0;
  top: 0;
  width: calc(100% - 15px); /* attempting to crop out the scroll bars */
  height: calc(100% - 15px);
  pointer-events: none;
}

/* Song.
 *********************************************************************************************/
 
.SongEditor {
  display: flex;
  flex-direction: column;
  height: 100vh !important;
}
.SongEditor > .bottom {
  flex: 1;
  display: flex;
  flex-direction: row;
  max-height: calc(100vh - 40px);
}

.SongToolbarUi {
  height: 40px;
  border-bottom: 1px solid #000;
  display: flex;
  flex-direction: row;
  align-items: center;
}
.SongToolbarUi > .playhead {
  width: 200px;
  height: 30px;
  margin: 0 5px;
}

.SongChannelsUi {
  width: 300px;
  min-width: 300px;
  max-width: 300px;
  border-right: 1px solid #000;
  overflow-y: scroll;
}
.SongChannelsUi > .channel {
  margin: 5px;
  padding: 5px;
  border: 1px solid #000;
  box-shadow: #000 2px 2px;
  min-height: 80px;
  display: flex;
  flex-direction: column;
  gap: 2px;
}
.SongChannelsUi .row {
  display: flex;
  flex-direction: row;
}
.SongChannelsUi .spacer {
  flex: 1;
}
.SongChannelsUi .name {
  font-weight: bold;
  cursor: pointer;
}
.SongChannelsUi .tattle {
  width: 30px;
  text-align: center;
}
.SongChannelsUi input[type='range'] {
  flex: 1;
}
.SongChannelsUi .sublabel {
  margin-left: 5px;
}
.SongChannelsUi .playback {
  margin-right: 5px;
}

.SongEventsUi {
  flex: 1;
  display: flex;
  flex-direction: column;
  overflow-y: scroll;
}
.SongEventsUi > .event {
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 5px;
  user-select: none;
  cursor: pointer;
  background-color: #333;
}
.SongEventsUi > .event:hover {
  background-color: #555;
}
.SongEventsUi > .event > .time {
  width: 60px;
  text-align: right;
}
.SongEventsUi > .event > .chid {
  width: 1lh;
  text-align: center;
  background-color: #666;
}

/* Song Channel Colors, available to all elements. */
.chid-0  { background-color: #800 !important }
.chid-1  { background-color: #050 !important }
.chid-2  { background-color: #008 !important }
.chid-3  { background-color: #820 !important }
.chid-4  { background-color: #804 !important }
.chid-5  { background-color: #450 !important }
.chid-6  { background-color: #408 !important }
.chid-7  { background-color: #420 !important }
.chid-8  { background-color: #404 !important }
.chid-9  { background-color: #024 !important }
.chid-10 { background-color: #200 !important }
.chid-11 { background-color: #010 !important }
.chid-12 { background-color: #002 !important }
.chid-13 { background-color: #210 !important }
.chid-14 { background-color: #202 !important }
.chid-15 { background-color: #012 !important }

.ModecfgModal {
  display: flex;
  flex-direction: column;
  min-width: 500px;
}

.ModecfgModal > .bottom {
  display: flex;
  flex-direction: row;
  border-top: 1px solid #444;
}

.ModecfgModal .spacer {
  flex: 1;
}

.ModecfgModal .drum {
  display: flex;
  flex-direction: row;
  align-items: baseline;
}
.ModecfgModal .drum .size {
  font-family: monospace;
  min-width: 40px;
  text-align: center;
}
.ModecfgModal .drum .name {
  min-width: 150px;
}

.ModecfgModal td.v {
  display: flex;
  flex-direction: row;
  align-items: center;
}

.ModecfgModal textarea {
  width: 100%;
}

.ModecfgModal .bigrow {
  display: flex;
  flex-direction: row;
  gap: 10px;
}

.HarmonicsUi {
  display: flex;
}
.HarmonicsUi > canvas {
  flex: 1;
}

.EnvUi {
  display: flex;
  flex-direction: column;
}
.EnvUi canvas.visual {
  min-width: 300px;
  min-height: 200px;
}
.EnvUi .controls {
  display: flex;
  flex-direction: row;
  align-items: baseline;
  gap: 5px;
}
.EnvUi .tattle {
  font-family: monospace;
}

.PostModal {
  min-width: 50vw;
  min-height: 50vh;
  display: flex;
  flex-direction: column;
}
.PostModal > form {
  flex: 1;
  display: flex;
  flex-direction: column;
}
.PostModal .spacer {
  flex: 1;
}
.PostModal .stage {
  display: flex;
  flex-direction: row;
}
.PostModal .stage .payload {
  display: flex;
  flex-direction: row;
  flex: 1;
}
.PostModal .stage input[type='number'] {
  width: 60px;
}
.PostModal .stage input[name='extra'] {
  flex: 1;
}

.InstrumentsModal {
  display: flex;
  flex-direction: column;
}

.StringsEditor {
  display: flex;
  flex-direction: column;
  overflow-x: hidden;
  overflow-y: scroll;
  max-height: 100vh;
}
.StringsEditor td {
  text-align: center;
}
.StringsEditor textarea {
  width: 100%;
  height: 1lh;
}

.LaunchModal {
  width: 50vw;
  height: 50vh;
  padding: 0;
  overflow: hidden;
}
.LaunchModal > iframe {
  width: 100%;
  height: 100%;
  border: 0;
}

.EventFilterModal .channelSelect {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
}
.EventFilterModal .box {
  padding: 2px;
  border: 1px solid #000;
  margin: 2px;
  display: flex;
  flex-direction: row;
  align-items: center;
  background-color: #222;
  color: #fff;
}
.EventFilterModal h2 {
  margin: 0;
  margin-bottom: 0.5em;
}

/* Globals.
 ******************************************************************************************/

html {
  background-color: #444;
  color: #fff;
  font-family: sans-serif;
  font-size: 10pt;
}

body {
  margin: 0;
  width: 100vw;
  height: 100vh;
}

.row {
  display: flex;
  flex-direction: row;
}
.col {
  display: flex;
  flex-direction: column;
}

dialog {
  border-radius: 5px;
  box-shadow: #000 0 0 10px;
}

::backdrop {
  background-color: #000;
  opacity: 0.500;
}

/* General usage tips.
 */
.advice {
  font-style: italic;
}

/* Checkboxes or radio buttons where the whole label is the button.
 * Prefer for inline toggles, where it's not obvious which label the button would attach to.
 * INPUT first, then LABEL, both with class "toggle".
 */
input.toggle {
  display: none;
}
label.toggle {
  border: 1px solid #000;
  padding: 3px 8px;
  margin: 2px;
  background-color: #555;
  cursor: pointer;
  user-select: none;
}
input.toggle:checked + label.toggle {
  background-color: #123;
}

.ModalPickOne {
  display: flex;
  flex-direction: column;
}

.ModalText input.response {
  min-width: 50vw;
}

.ModalError {
  background-color: #400;
  color: #fff;
  white-space: pre;
  min-width: 50vw;
  min-height: 50vh;
}

/* Root, sidebar, and associated bits.
 *************************************************************************************************/

.RootUi {
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template-columns: 250px calc(100vw - 250px);
  overflow:hidden;
}
.RootUi > .workbench {
  flex: 1;
}
.RootUi > .workbench > * {
  width: 100%;
  height: 100%;
}

.SidebarUi {
  min-width: 200px;
  border-right: 1px solid #000;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.SidebarUi .topRow {
  display: flex;
  flex-direction: row;
  padding: 4px;
  gap: 4px;
}
.SidebarUi .backendIndicator {
  width: 20px;
  height: 20px;
  border-radius: 12px;
  border: 2px solid #000;
  background-color: #888;
}
.SidebarUi .backendIndicator.clean {
  background-color: #080;
}
.SidebarUi .backendIndicator.dirty {
  background-color: #ff0;
}
.SidebarUi .backendIndicator.pending {
  background-color: #f80;
}
.SidebarUi .backendIndicator.error {
  background-color: #f00;
}
.SidebarUi .toc {
  overflow-y: scroll;
  flex: 1;
}
.SidebarUi details.type {
  margin-top: 5px;
}
.SidebarUi summary.type {
  background-color: #103;
  cursor: pointer;
  user-select: none;
}
.SidebarUi .res {
  cursor: pointer;
  user-select: none;
}
.SidebarUi .res:hover {
  background-color: #333;
}

.NewResourceModal {
  min-width: 400px;
}
.NewResourceModal h2 {
  margin: 0;
}
.NewResourceModal table {
  width: 100%;
}
.NewResourceModal td.value > input {
  width: 100%;
}
.NewResourceModal .bottomRow {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
}

.ResourceDetailsModal .path {
  font-size: 14pt;
  font-weight: bold;
}
.ResourceDetailsModal input[name='npath'] {
  min-width: 300px;
}
.ResourceDetailsModal .editors {
  display: flex;
  flex-direction: column;
}
.ResourceDetailsModal .editor.great {
  background-color: #0c0;
}
.ResourceDetailsModal .editor.good {
  background-color: #898;
}
.ResourceDetailsModal .editor.bad {
  background-color: #f66;
}

/* Minor standard editors.
 ****************************************************************************************/

.TextEditor textarea {
  box-sizing: border-box;
  width: 100%;
  height: 99%;
  background-color: #012;
  color: #fff;
  font-family: monospace;
}

.HexEditor textarea {
  box-sizing: border-box;
  width: 100%;
  height: 99%; /* At 100%, it goes 3px taller than the container and forces scroll bars. Why??? */
  background-color: #201;
  color: #fff;
  font-family: monospace;
}

.ImageEditor {
  display: flex;
  align-items: center;
  justify-content: center;
}
.ImageEditor img {
  width: 80%;
  height: 80%;
  image-rendering: pixelated;
  object-fit: contain;
}

.PickImageModal {
  display: flex;
  flex-direction: column;
}
.PickImageModal .topRow {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}
.PickImageModal button.image {
  height: 150px;
  width: 500px;
  display: flex;
  flex-direction: row;
  justify-content: flex-start;
  align-items: center;
}
.PickImageModal button.image.prior {
  background-color: #fec;
}
.PickImageModal canvas.thumbnail {
  width: 128px;
  height: 128px;
  margin-right: 10px;
}

.PickTileModal canvas {
  width: 768px;
  height: 768px;
}

/* Tilesheet
 *************************************************************************************/

.TilesheetEditor {
  background-color: #020;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.TilesheetEditor .toolbar {
  background-color: #666;
  border-bottom: 1px solid #000;
  padding: 4px;
  display: flex;
  flex-direction: row;
  align-items: center;
  gap: 6px;
}
.TilesheetEditor .toolbar > .spacer {
  margin-left: 5px;
  border-left: 1px solid #000;
  margin-right: 5px;
  height: 15px;
}
.TilesheetEditor .toolbar > .tattle {
  background-color: #000;
  color: #0f0;
  padding: 3px 6px;
  font-family: monospace;
}
.TilesheetEditor .canvas {
  flex: 1;
}

.TileModal {
  display: flex;
  flex-direction: column;
}
.TileModal > .topRow {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
}
.TileModal .tileid {
  font-weight: bold;
  font-size: 24pt;
  font-family: monospace;
  margin: 10px;
}
.TileModal table.neighbors tr {
  height: 20px;
}
.TileModal table.neighbors td[data-mask] {
  border: 1px solid #888;
  width: 20px;
  cursor: pointer;
}
.TileModal table.neighbors td.present {
  background-color: #080;
}
.TileModal .thumbnail {
  width: 64px;
  height: 64px;
  image-rendering: pixelated;
}
.TileModal td.key {
  text-align: right;
  width: 100px;
}
.TileModal td.desc {
  font-style: italic;
  width: 200px;
}
.TileModal .macros {
  display: grid;
  grid-template-columns: 50% 50%;
}
.TileModal .macros > button {
  display: flex;
  flex-direction: row;
  align-items: center;
}
.TileModal .macroPreview {
  width: 64px;
  height: 64px;
  margin-right: 5px;
  object-fit: contain;
}

/* Decalsheet
 *********************************************************************************/
 
.DecalsheetEditor {
  display: flex;
  flex-direction: row;
  align-items: stretch;
}
.DecalsheetEditor .sidebar {
  min-width: 300px;
  border-right: 1px solid #000;
  overflow-y: scroll;
}
.DecalsheetEditor .panel {
  padding: 5px;
  border: 1px solid #000;
  background-color: #040;
}
.DecalsheetEditor .panel:nth-child(odd) {
  background-color: #020;
}
.DecalsheetEditor .spacer {
  flex: 1;
}
.DecalsheetEditor input[name='comment'] {
  box-sizing: border-box;
  width: 100%;
}
.DecalsheetEditor input.coords {
  flex: 1;
}
.DecalsheetEditor .panel:hover input {
  background-color: #def;
}
.DecalsheetEditor .panel input.autoSetting {
  background-color: #ff0;
}
.DecalsheetEditor .previewWrapper {
  flex: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  overflow: hidden;
  position: relative;
}
.DecalsheetEditor .preview {
  /* width,height:100% and object-fit:contain work great for display purposes, but then it is impossible to project mouse coordinates into canvas space.
   * So instead, CSS will center the canvas in its wrapper, and JS will scale it up to the available space.
   */
  image-rendering: pixelated;
  position: absolute;
}

/* CommandList
 **************************************************************************************/

.CommandListEditor {
  overflow-y: scroll;
  height: 50vh;
}
.CommandListEditor input[name='command'] {
  flex: 1;
  min-width: 40vw;
}

.SpriteEditor .topRow {
  align-items: center;
}
.SpriteEditor .preview {
  width: 128px;
  height: 128px;
  image-rendering: pixelated;
}

/* Map
 *************************************************************************************/
 
.MapEditor {
  display: grid;
  grid-template-rows: 55px calc(100vh - 55px);
  grid-template-columns: 100%;
}

.MapToolbar {
  display: flex;
  flex-direction: row;
  align-items: center;
  border-bottom: 1px solid #000;
  gap: 4px;
  padding: 0 4px;
}
.MapToolbar > .palette {
  width: 32px;
  height: 32px;
  padding: 2px;
  border: 1px solid #000;
  image-rendering: pixelated;
}
.MapToolbar > .toolbox {
  display: grid;
  grid-template-rows: 50% 50%;
  grid-auto-flow: column;
}
.MapToolbar > .toolbox .tool {
  width: 16px;
  height: 16px;
  padding: 1px;
  background-image: url('./icons.png');
  background-clip: content-box;
  cursor: pointer;
}
.MapToolbar > .toolbox .tool.selected {
  background-color: #ff0;
}
.MapToolbar > .toolbox .tool[data-name='pencil']   { background-position:    1px 1px; }
.MapToolbar > .toolbox .tool[data-name='rainbow']  { background-position:  -15px 1px; }
.MapToolbar > .toolbox .tool[data-name='monalisa'] { background-position:  -31px 1px; }
.MapToolbar > .toolbox .tool[data-name='heal']     { background-position:  -47px 1px; }
.MapToolbar > .toolbox .tool[data-name='pickup']   { background-position:  -63px 1px; }
.MapToolbar > .toolbox .tool[data-name='marquee']  { background-position:  -79px 1px; }
.MapToolbar > .toolbox .tool[data-name='lasso']    { background-position:  -95px 1px; }
.MapToolbar > .toolbox .tool[data-name='poiedit']  { background-position: -111px 1px; }
.MapToolbar > .toolbox .tool[data-name='poimove']  { background-position: -127px 1px; }
.MapToolbar > .toolbox .tool[data-name='door']     { background-position: -143px 1px; }
.MapToolbar > .vzone {
  flex: 1;
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.MapToolbar .toggles {
  display: flex;
  flex-direction: row;
}
.MapToolbar .tattles {
  display: flex;
  flex-direction: row;
}
.MapToolbar .tattle {
  background-color: #000;
  font-family: monospace;
  margin: 2px;
  padding: 3px 5px;
  height: 1lh;
}
.MapToolbar .tattle.position {
  color: #0f0;
  width: 60px;
  white-space: pre;
}
.MapToolbar .tattle.detail {
  color: #ff0;
  flex: 1;
}

.MapCanvas {
  flex: 1;
  display: flex;
  align-items: stretch;
  justify-content: stretch;
  position: relative;
}
.MapCanvas .scroller {
  flex: 1;
  overflow: scroll;
}
.MapCanvas .sizer {
  background-color: #000;
}
.MapCanvas .main {
  position: absolute;
  left: 0;
  top: 0;
  width: calc(100% - 15px); /* attempting to crop out the scroll bars */
  height: calc(100% - 15px);
  pointer-events: none;
}
